import React, { useEffect, useState } from 'react';
import { useSession } from 'next-auth/react';
import Head from 'next/head';
import Link from 'next/link';

import { spotifyApi } from '../../utils/spotify';
import {
  ArrowCircleLeftIcon,
  FastForwardIcon,
  PauseIcon,
  XIcon,
} from '@heroicons/react/solid';
import { BsPause } from 'react-icons/bs';
import { BiUndo } from 'react-icons/bi';

const Game = () => {
  const [playingTrack, setPlayingTrack] = useState();
  const [guess, setGuess] = useState('');
  const [score, setScore] = useState(0);
  const [lives, setLives] = useState(1);
  const { data: session } = useSession();
  const accessToken = session?.accessToken;

  // useEffect(() => {
  //   if (!accessToken) return;

  //   spotifyApi
  //     .getNewReleases()
  //     .then((res: { body: { albums: { items: any[] } } }) => {
  //       setSearchResults(
  //         res.body.albums.items.map((track) => {
  //           return {
  //             id: track.id,
  //             artist: track.artists[0].name,
  //             title: track.name,
  //             uri: track.uri,
  //             albumUrl: track.images[0].url,
  //             popularity: track.popularity,
  //           };
  //         })
  //       );
  //     });
  // }, [search, accessToken]);

  const chooseRandomTrack = (tracks: any[]) => {
    const randomPosition = Math.floor(Math.random() * tracks.length);
    const track = tracks[randomPosition];
    setPlayingTrack(track);
  };

  return (
    <div className='flex flex-col justify-evenly h-screen w-[80rem] bg-neutral-900 mx-auto'>
      <Head>
        <title>Guess that song!</title>
        <meta
          name='description'
          content='Generated by create-t3-app'
        />
      </Head>
      <h1 className='text-4xl font-bold text-gray-200'>GUESSPOT</h1>
      <div className='bg-green-500 h-1/3 flex items-center justify-center'>
        VIZUALIZER
      </div>
      <div className='w-full items-center justify-center flex space-x-8'>
        <BiUndo className='text-6xl cursor-pointer text-gray-200' />
        <FastForwardIcon className='w-14 cursor-pointer text-gray-200' />
      </div>
      <div className='w-full items-center justify-center flex space-x-8'>
        <div className='w-14 h-14 input-shadow rounded-lg'>
          {lives > 0 && <XIcon className='text-red-800' />}
        </div>
        <div className='w-14 h-14 input-shadow rounded-lg'>
          {lives > 1 && <XIcon className='text-red-800' />}
        </div>
        <div className='w-14 h-14 input-shadow rounded-lg'>
          {lives > 2 && <XIcon className='text-red-800' />}
        </div>
      </div>
      <label className='text-gray-200 text-2xl space-y-3 mx-auto'>
        <h1 className='pl-3'>Type your guess</h1>
        <input
          className='w-[50rem] h-20 px-10 uppercase focus:outline-none input-shadow rounded-lg bg-[#111111] text-gray-200 text-4xl'
          onChange={({ target }) => {
            setGuess(target.value);
          }}
        />
      </label>
      <div className='flex flex-col justify-center items-center'>
        <h1 className='text-gray-200 text-2xl'>SCORE</h1>
        <h2 className='text-gray-200 text-2xl'>{score}</h2>
      </div>
    </div>
  );
};

export default Game;
